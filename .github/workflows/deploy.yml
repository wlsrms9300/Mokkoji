# ## 테스트 배포
# name: Deploy

# on:
#     push:
#         branches: [main] # 테스트 배포 브랜치

# env:
#     DOCKER_IMAGE: ghcr.io/${{ github.actor }}/chargingpot # 도커 이미지 이름
#     VERSION: ${{ github.sha }} # 버전
#     NAME: mokkoji # 이름

# jobs:
#     build:
#         runs-on: ubuntu-latest
#         steps:
#             - name: Checkout
#                 uses: actions/checkout@v3

#             - name: Set up Docker Buildx
#                 id: buildIdx
#                 uses: docker/setup-buildx-action@v1

#             - name: Cache Docker layers
#                 uses: actions/cache@v3
#                 with:
#                     path: /tmp/.buildx-cache
#                     key: ${{ runner.os }}-buildx-${{ env.VERSION }}
#                     restore-keys: |
#                         ${{ runner.os }}-buildx-
#             - name: Login to ghcr
#                 uses: docker/login-action@v1
#                 with:
#                 registry: ghcr.io
#                 username: ${{ github.actor }}
#                 password: ${{ secrets.GHCR_TOKEN }}
#                 # 우리가 방금 복사해서 setting secrets 에 붙여줬던 token 이다. 이름을 기억해 넣어주자.
#                 # 우리의 ghcr.io 에 접근하기 위함이다.

#             - name: Build and push
#                 id: docker_build
#                 uses: docker/build-push-action@v2
#                 with:
#                 builder: ${{ steps.buildx.outputs.name }}
#                 push: true
#                 tags: ${{ env.DOCKER_IMAGE }}:latest

# deploy:
#     needs: build
#     name: Deploy
#     runs-on: [ self-hosted, label-mokkoji ]
#     # label-mokkoji 라는 이름으로 AWS EC2 가 Runner 를 작동시킬 때 사용했던 그 label
#     steps:
#       - name: Login to ghcr
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_TOKEN }}

#       - name: Docker run
#         run: |
#           docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
#           docker run -d -p 3000:3000 --name mokkoji --restart always ${{ env.DOCKER_IMAGE }}:latest

name: Test Workflow

on:
    push:
        branches: main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Check Node Version
              run: node -v

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Build
              run: yarn beta
